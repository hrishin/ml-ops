name: Deploy serving service

concurrency: 
  group: deployment-pipeline
  cancel-in-progress: false

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New image version to deploy (e.g. v1.2.0)'
        required: true

jobs:
  deploy-to-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    timeout-minutes: 0 # No timeout
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install yq
        uses: mikefarah/yq@v4.35.1

      - name: Update tag in destination file
        run: |
          SRC=deployment/overlays/dev/apps/values.yaml
          yq e '.spec.values.image.tag = "${{ github.event.inputs.version }}"' -i "$SRC"

      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Deployed the version ${{ github.event.inputs.version }} to the dev environment"
          git push
    
      - name: Write summary
        run: |
          echo "### ðŸš€ Pushed Docker image tag ${VERSION} to the dev environment" >> $GITHUB_STEP_SUMMARY
        env:
          VERSION: ${{ github.event.inputs.version || 'latest' 

  wait-for-approval:
    needs: deploy-to-dev
    runs-on: ubuntu-latest
    environment: 
      name: development
      # The URL can point to your application or a relevant status page
      url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - name: Manual approval step
        run: |
          echo "Deployment has been approved! Continuing with deployment process..."
          echo "This step only runs after manual approval in the GitHub UI."
          
  request-stage-approval:
    name: Request Stage Deployment Approval
    needs: wait-for-approval
    runs-on: ubuntu-latest
    timeout-minutes: 0 # No timeout
    steps:
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: hrishin
          minimum-approvals: 1
          issue-title: "Deploying ${{ github.event.inputs.version }} to stag from dev evnrionment"
          issue-body: "Please approve or deny the deployment of version ${{ github.event.inputs.version }}"
          exclude-workflow-initiator-as-approver: false
          fail-on-denial: true
          additional-approved-words: ''
          additional-denied-words: ''

  deploy-to-stage:
    name: Deploy to Stage
    needs: request-stage-approval
    runs-on: ubuntu-latest
    environment: stage
    timeout-minutes: 0 # No timeout
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install yq
        uses: mikefarah/yq@v4.35.1

      - name: Update tag in destination file
        run: |
          SRC=deployment/overlays/stage/apps/values.yaml
          yq e '.spec.values.image.tag = "${{ github.event.inputs.version }}"' -i "$SRC"

      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Deployed the version ${{ github.event.inputs.version }} to the stage environment"
          git push
    
      - name: Write summary
        run: |
          echo "### ðŸš€ Pushed Docker image tag ${VERSION} to the stage environment" >> $GITHUB_STEP_SUMMARY
        env:
          VERSION: ${{ github.event.inputs.version || 'latest' }}

  request-prod-approval:
    name: Request Prod Deployment Approval
    needs: deploy-to-stage
    runs-on: ubuntu-latest
    timeout-minutes: 0 # No timeout
    steps:
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: hrishin
          minimum-approvals: 1
          issue-title: "Deploying ${{ github.event.inputs.version }} to prod from stage evnrionment"
          issue-body: "Please approve or deny the deployment of version ${{ github.event.inputs.version }}"
          exclude-workflow-initiator-as-approver: false
          fail-on-denial: true
          additional-approved-words: ''
          additional-denied-words: ''

  deploy-to-prod:
    name: Deploy to Prod
    needs: request-prod-approval
    runs-on: ubuntu-latest
    environment: prod
    timeout-minutes: 0 # No timeout
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install yq
        uses: mikefarah/yq@v4.35.1

      - name: Update tag in destination file
        run: |
          SRC=deployment/overlays/prod/apps/values.yaml
          yq e '.spec.values.image.tag = "${{ github.event.inputs.version }}"' -i "$SRC"

      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Deployed the version ${{ github.event.inputs.version }} to the prod environment"
          git push
    
      - name: Write summary
        run: |
          echo "### ðŸš€ Pushed Docker image tag ${VERSION} to the prod environment" >> $GITHUB_STEP_SUMMARY
        env:
          VERSION: ${{ github.event.inputs.version || 'latest' }}
